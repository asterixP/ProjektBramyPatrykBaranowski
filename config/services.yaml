# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Order\Infrastructure\Repository\OrderMysqlRepository:
        arguments:
            $connection: '@doctrine.dbal.default_connection'

    App\Order\Infrastructure\Query\GetNotRemovedOrdersMysqlQuery:
        arguments:
            $connection: '@doctrine.dbal.default_connection'

    App\Order\Application\UseCase\CreateOrder\CreateOrderHandlerMysql:
        arguments:
            $repository: '@App\Order\Infrastructure\Repository\OrderMysqlRepository'

    App\Order\Action\CreateOrderAction:
        public: true
        arguments:
            $handler: '@App\Order\Application\UseCase\CreateOrder\CreateOrderHandlerMysql'

    App\Order\Application\UseCase\EditOrder\EditOrderHandlerMysql:
        arguments:
            $repository: '@App\Order\Infrastructure\Repository\OrderMysqlRepository'

    App\Order\Action\EditOrderAction:
        public: true
        arguments:
            $handler: '@App\Order\Application\UseCase\EditOrder\EditOrderHandlerMysql'

    App\Order\Application\UseCase\DeleteOrder\DeleteOrderHandlerMysql:
        arguments:
            $repository: '@App\Order\Infrastructure\Repository\OrderMysqlRepository'

    App\Order\Action\DeleteOrderAction:
        public: true
        arguments:
            $handler: '@App\Order\Application\UseCase\DeleteOrder\DeleteOrderHandlerMysql'

    App\Order\Application\UseCase\GetOrders\GetOrdersHandlerMysql:
        arguments:
            $getNotRemovedOrdersQuery: '@App\Order\Infrastructure\Query\GetNotRemovedOrdersMysqlQuery'

    App\Order\Action\GetOrdersAction:
        public: true
        arguments:
            $handler: '@App\Order\Application\UseCase\GetOrders\GetOrdersHandlerMysql'

    App\Controller\OrderController:
        public: true
        arguments:
            $getOrdersAction: '@App\Order\Action\GetOrdersAction'
